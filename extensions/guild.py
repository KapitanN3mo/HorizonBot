import json

import discord
from assets import emojis
from discord.ext import commands

import database
from modules.permissions import admin_permission_required


class GuildsCommands(commands.Cog):
    def __init__(self, bot: commands.Bot):
        self.bot = bot

    @commands.command()
    @admin_permission_required
    async def guild_menu(self, ctx: commands.Context):
        emb = discord.Embed(title='–ú–µ–Ω—é —Å–µ—Ä–≤–µ—Ä–∞', color=discord.Colour(0xA000CC))
        emb.set_thumbnail(url=ctx.guild.icon_url)
        emb.set_author(name=ctx.author.display_name, icon_url=ctx.author.avatar_url)
        user_counter = 0
        bot_counter = 0
        for member in ctx.guild.members:
            if member.bot:
                bot_counter += 1
            else:
                user_counter += 1
        emb.add_field(name='–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π', value=f'```üë§:{user_counter} ü§ñ:{bot_counter}```')

        def check_admin(member):
            return True if member.guild_permissions.administrator and not member.bot else False

        emb.add_field(name='–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã',
                      value=' '.join([member.mention for member in ctx.guild.members if check_admin(member)]))
        db_guild: database.Guild = database.Guild.get(database.Guild.guild_id == ctx.guild.id)
        adm_access = []
        for user in json.loads(db_guild.admins):
            ds_user = self.bot.get_user(
                (database.User.get(database.User.user_db_id == user)).user_id)
            adm_access.append(ds_user.mention)
        emb.add_field(name='–î–æ—Å—Ç—É–ø –∫ –∞–¥–º–∏–Ω. –∫–æ–º–∞–Ω–¥–∞–º',
                      value=''.join(adm_access) if adm_access else f'```{emojis.no_entry_unicode} –ù–µ—Ç```')
        emb.add_field(name='–ü—Ä–∏–≤–∞—Ç–Ω—ã–µ –∫–∞–Ω–∞–ª—ã',
                      value=f'```{emojis.white_check_mark_unicode} –í–∫–ª—é—á–µ–Ω—ã```{self.bot.get_channel(db_guild.private_voice).mention}' if db_guild.private_voice is not None else f'```{emojis.no_entry_unicode} –í—ã–∫–ª—é—á–µ–Ω—ã```')
        stat_info = ''
        if db_guild.statistics_category is None:
            stat_info = f'```{emojis.no_entry_unicode} –í—ã–∫–ª—é—á–µ–Ω–∞```'
        else:
            stat_info += '```'
            s_info = json.loads(db_guild.statistics_info)
            for stat in s_info:
                if s_info[stat]['mode']:
                    stat_info += f'{emojis.white_check_mark_unicode} {stat}\n'
                else:
                    stat_info += f'{emojis.no_entry_unicode} {stat}\n'
            stat_info += '```'
        emb.add_field(name='–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞', value=stat_info)
        emb.add_field(name='–ö–∞–Ω–∞–ª –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π',
                      value=f'```{emojis.white_check_mark_unicode}–ï—Å—Ç—å```{self.bot.get_channel(db_guild.notify_channel).mention}' if db_guild.notify_channel is not None else f'```{emojis.no_entry_unicode} –ù–µ—Ç```')
        emb.add_field(name='–ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –≤ –∫–∞–Ω–∞–ª–µ –¥–ª—è –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è –æ–ø—ã—Ç–∞',
                      value='```' + str(db_guild.minimum_voice_time) + ' —Å–µ–∫—É–Ω–¥```')
        emb.add_field(name='–ú–Ω–æ–∂–∏—Ç–µ–ª—å –¥–ª—è –≥–æ–ª–æ—Å–æ–≤—ã—Ö –∫–∞–Ω–∞–ª–æ–≤', value=f'```{db_guild.xp_voice_multiplier}```')
        emb.add_field(name='–ú–Ω–æ–∂–∏—Ç–µ–ª—å –¥–ª—è —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –∫–∞–Ω–∞–ª–æ–≤', value=f'```{db_guild.xp_message_multiplier}```')
        await ctx.send(embed=emb)


def setup(bot: commands.Bot):
    bot.add_cog(GuildsCommands(bot))
